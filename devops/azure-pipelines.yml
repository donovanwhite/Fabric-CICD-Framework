# Azure DevOps Pipeline for Microsoft Fabric CI/CD
# Updated for fabric-cicd v0.1.29 with configuration-based deployment support
# Supports both traditional and new configuration-based approaches

trigger:
- main
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Fabric Configuration
  FABRIC_WORKSPACE_ID: 'your-workspace-id-here'  # Replace with your workspace ID
  PYTHON_VERSION: '3.11'
  
  # Repository Configuration (automatically populated by Azure DevOps)
  REPO_URL: $(Build.Repository.Uri)
  BRANCH_NAME: $(Build.SourceBranchName)
  
  # v0.1.29 Configuration-based deployment options
  # Set USE_CONFIG_DEPLOYMENT to 'true' to use config/config.yml approach
  USE_CONFIG_DEPLOYMENT: 'false'  # Change to 'true' to enable
  CONFIG_FILE: 'config/config.yml'
  ENVIRONMENT_NAME: 'prod'  # Environment name for config-based deployment

stages:
- stage: Validate
  displayName: 'Validate Repository'
  jobs:
  - job: ValidateRepo
    displayName: 'Validate Repository Structure'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PYTHON_VERSION)
      displayName: 'Setup Python $(PYTHON_VERSION)'

    - script: |
        python -m pip install --upgrade pip
        pip install fabric-cicd GitPython azure-identity pyodbc requests
      displayName: 'Install Dependencies'
    
    - script: |
        # Install .NET SDK for warehouse schema deployment
        wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
        chmod +x dotnet-install.sh
        ./dotnet-install.sh --version latest
        export PATH="$HOME/.dotnet:$PATH"
        echo "##vso[task.setvariable variable=PATH]$HOME/.dotnet:$PATH"
      displayName: 'Install .NET SDK'
    
    - script: |
        # Install SqlPackage for warehouse schema deployment
        export PATH="$HOME/.dotnet:$PATH"
        dotnet tool install --global Microsoft.SqlPackage
        echo "##vso[task.setvariable variable=PATH]$HOME/.dotnet/tools:$PATH"
      displayName: 'Install SqlPackage.exe'

    - script: |
        echo "üîç Validating repository structure..."
        python core/fabric_deploy.py \
          --workspace-id "$(FABRIC_WORKSPACE_ID)" \
          --repo-url "$(REPO_URL)" \
          --branch "$(BRANCH_NAME)" \
          --dry-run
      displayName: 'Dry Run - Validate Repository'
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)

- stage: Deploy
  displayName: 'Deploy to Fabric'
  dependsOn: Validate
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment: DeployFabricItems
    displayName: 'Deploy Fabric Items'
    environment: 'Fabric-Production'  # Create this environment in Azure DevOps
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(PYTHON_VERSION)
            displayName: 'Setup Python $(PYTHON_VERSION)'

          - script: |
              python -m pip install --upgrade pip
              pip install fabric-cicd GitPython azure-identity pyodbc requests
            displayName: 'Install Dependencies'
          
          - script: |
              # Install .NET SDK for warehouse schema deployment
              wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
              chmod +x dotnet-install.sh
              ./dotnet-install.sh --version latest
              export PATH="$HOME/.dotnet:$PATH"
              echo "##vso[task.setvariable variable=PATH]$HOME/.dotnet:$PATH"
            displayName: 'Install .NET SDK'
          
          - script: |
              # Install SqlPackage for warehouse schema deployment
              export PATH="$HOME/.dotnet:$PATH"
              dotnet tool install --global Microsoft.SqlPackage
              echo "##vso[task.setvariable variable=PATH]$HOME/.dotnet/tools:$PATH"
            displayName: 'Install SqlPackage.exe'

          - script: |
              echo "üöÄ Deploying Fabric items ..."
              echo "Repository: $(REPO_URL)"
              echo "Branch: $(BRANCH_NAME)" 
              echo "Workspace: $(FABRIC_WORKSPACE_ID)"
              echo "Config-based deployment: $(USE_CONFIG_DEPLOYMENT)"
              echo ""
              
              # Ensure PATH includes .NET tools for warehouse schema deployment
              export PATH="$HOME/.dotnet:$HOME/.dotnet/tools:$PATH"
              
              if [ "$(USE_CONFIG_DEPLOYMENT)" = "true" ]; then
                echo "üÜï Using v0.1.29 Configuration-based deployment with warehouse schemas"
                python core/fabric_deploy.py \
                  --config-file "$(CONFIG_FILE)" \
                  --environment "$(ENVIRONMENT_NAME)" \
                  --include-warehouse-schemas
              else
                echo "üì¶ Using traditional deployment approach with warehouse schemas"
                python core/fabric_deploy.py \
                  --workspace-id "$(FABRIC_WORKSPACE_ID)" \
                  --repo-url "$(REPO_URL)" \
                  --branch "$(BRANCH_NAME)" \
                  --include-warehouse-schemas
              fi
            displayName: 'Deploy Fabric Items'
            env:
              AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
              AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
              AZURE_TENANT_ID: $(AZURE_TENANT_ID)

          - script: |
              echo "‚úÖ Deployment completed!"
              echo "üéâ Check your Fabric workspace to verify the deployment."
              echo "üìä Workspace ID: $(FABRIC_WORKSPACE_ID)"
            displayName: 'Deployment Summary'

# Development/Pull Request Pipeline
- stage: ValidatePR
  displayName: 'Validate Pull Request'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  jobs:
  - job: ValidatePRChanges
    displayName: 'Validate PR Changes'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PYTHON_VERSION)
      displayName: 'Setup Python $(PYTHON_VERSION)'

    - script: |
        python -m pip install --upgrade pip
        pip install fabric-cicd GitPython azure-identity pyodbc requests
      displayName: 'Install Dependencies'
    
    - script: |
        # Install .NET SDK for warehouse schema validation
        wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
        chmod +x dotnet-install.sh
        ./dotnet-install.sh --version latest
        export PATH="$HOME/.dotnet:$PATH"
        echo "##vso[task.setvariable variable=PATH]$HOME/.dotnet:$PATH"
      displayName: 'Install .NET SDK'
    
    - script: |
        # Install SqlPackage for warehouse schema validation
        export PATH="$HOME/.dotnet:$PATH"
        dotnet tool install --global Microsoft.SqlPackage
        echo "##vso[task.setvariable variable=PATH]$HOME/.dotnet/tools:$PATH"
      displayName: 'Install SqlPackage.exe'

    - script: |
        echo "üîç Validating PR changes with warehouse schema support..."
        echo "This is a Pull Request validation - no deployment will occur"
        export PATH="$HOME/.dotnet:$HOME/.dotnet/tools:$PATH"
        python core/fabric_deploy.py \
          --workspace-id "$(FABRIC_WORKSPACE_ID)" \
          --repo-url "$(REPO_URL)" \
          --branch "$(System.PullRequest.SourceBranch)" \
          --dry-run \
          --include-warehouse-schemas
      displayName: 'Validate PR Changes (Dry Run)'
      env:
        AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
        AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
        AZURE_TENANT_ID: $(AZURE_TENANT_ID)
